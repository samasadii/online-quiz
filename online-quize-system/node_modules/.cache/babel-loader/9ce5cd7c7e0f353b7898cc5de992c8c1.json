{"remainingRequest":"/Users/samasadi/Documents/online-quize-system/node_modules/babel-loader/lib/index.js!/Users/samasadi/Documents/online-quize-system/node_modules/eslint-loader/index.js??ref--13-0!/Users/samasadi/Documents/online-quize-system/src/mixin.js","dependencies":[{"path":"/Users/samasadi/Documents/online-quize-system/src/mixin.js","mtime":1596326289162},{"path":"/Users/samasadi/Documents/online-quize-system/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/samasadi/Documents/online-quize-system/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/samasadi/Documents/online-quize-system/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc3BsaWNlIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZyI7CgovKiBlc2xpbnQtZGlzYWJsZSAqLwppbXBvcnQgc3RvcmUgZnJvbSAiLi9zdG9yZS9pbmRleCI7CmltcG9ydCBheGlvcyBmcm9tICJheGlvcyI7CnZhciBtaXhpbiA9IHsKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgVVJMOiAiaHR0cDovLzEyNy4wLjAuMTo4MDAwLyIKICAgIH07CiAgfSwKICBtZXRob2RzOiB7CiAgICBiYXNlUmVxdWVzdDogZnVuY3Rpb24gYmFzZVJlcXVlc3QoY29uZmlnKSB7CiAgICAgIHZhciBpbnN0YW5jZSA9IGF4aW9zLmNyZWF0ZSh7CiAgICAgICAgYmFzZVVSTDogImh0dHA6Ly8xMjcuMC4wLjE6ODAwMC8iCiAgICAgIH0pOwogICAgICByZXR1cm4gaW5zdGFuY2UucmVxdWVzdChjb25maWcpOwogICAgfSwKICAgIHJlcXVlc3Q6IGZ1bmN0aW9uIHJlcXVlc3QoY29uZmlnKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICB2YXIgaW5zdGFuY2UgPSBheGlvcy5jcmVhdGUoewogICAgICAgIGJhc2VVUkw6ICJodHRwOi8vMTI3LjAuMC4xOjgwMDAvIiwKICAgICAgICBoZWFkZXJzOiB7CiAgICAgICAgICBhdXRob3JpemF0aW9uOiAiVG9rZW4gIiArIGxvY2FsU3RvcmFnZS50b2tlbiwKICAgICAgICAgICJDb250ZW50LVR5cGUiOiAiYXBwbGljYXRpb24vanNvbiIKICAgICAgICB9CiAgICAgIH0pOwogICAgICBpbnN0YW5jZS5pbnRlcmNlcHRvcnMucmVzcG9uc2UudXNlKGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICAgIC8vIGRvIHNvbWV0aGluZyB3aXRoIHRoZSByZXNwb25zZSBkYXRhXAogICAgICAgIC8vIHRoaXMubG9hZGluZyA9IGZhbHNlCiAgICAgICAgcmV0dXJuIHJlc3BvbnNlOwogICAgICB9LCBmdW5jdGlvbiAoZXJyb3IpIHsKICAgICAgICAvLyB0aGlzLmxvYWRpbmcgPSBmYWxzZQogICAgICAgIC8vIGhhbmRsZSB0aGUgcmVzcG9uc2UgZXJyb3IKICAgICAgICBpZiAoZXJyb3IucmVzcG9uc2UpIHsKICAgICAgICAgIGlmIChlcnJvci5yZXNwb25zZS5kYXRhICYmIGVycm9yLnJlc3BvbnNlLnN0YXR1cyAhPT0gNDA0ICYmIGVycm9yLnJlc3BvbnNlLnN0YXR1cyAhPT0gNTAwKSB7Ly8gbGV0IGVycm9ycyA9IE9iamVjdC52YWx1ZXMoZXJyb3IucmVzcG9uc2UuZGF0YSkKICAgICAgICAgICAgLy8gZXJyb3JzLmZvckVhY2gobXNnID0+IHsgTS50b2FzdCh7IGh0bWw6IG1zZywgY2xhc3NlczogJ3JlZCcgfSkgfSk7CiAgICAgICAgICB9IC8vIGlmIChlcnJvci5yZXNwb25zZS5zdGF0dXMgPT0gNTAzKSB7IE0udG9hc3QoeyBodG1sOiAn2K7Yt9inINiv2LEg2KfYsdiq2KjYp9i3INio2Kcg2LPYsdmI2LEnLCBjbGFzc2VzOiAncmVkJyB9KSB9CiAgICAgICAgICAvLyBpZiAoZXJyb3IucmVzcG9uc2Uuc3RhdHVzID09IDQwMykgc3RvcmUuZGlzcGF0Y2goIkdldFVzZXJEYXRhIik7CgoKICAgICAgICAgIGlmIChlcnJvci5yZXNwb25zZS5zdGF0dXMgPT0gNDAxKSBfdGhpcy4kcm91dGVyLnB1c2goIi9sb2dpbiIpOwogICAgICAgIH0KCiAgICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KGVycm9yKTsKICAgICAgfSk7CiAgICAgIHJldHVybiBpbnN0YW5jZS5yZXF1ZXN0KGNvbmZpZyk7CiAgICB9LAogICAgY2hlY2tBdXRoOiBmdW5jdGlvbiBjaGVja0F1dGgoKSB7fSwKICAgIGRlbGV0ZURyb3BGaWxlOiBmdW5jdGlvbiBkZWxldGVEcm9wRmlsZShpbmRleCkgewogICAgICB0aGlzLmRyb3BGaWxlcy5zcGxpY2UoaW5kZXgsIDEpOwogICAgfQogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIHRva2VuOiBmdW5jdGlvbiB0b2tlbigpIHsKICAgICAgcmV0dXJuIHN0b3JlLnN0YXRlLnRva2VuOwogICAgfQogIH0KfTsKZXhwb3J0IGRlZmF1bHQgbWl4aW47"},{"version":3,"sources":["/Users/samasadi/Documents/online-quize-system/src/mixin.js"],"names":["store","axios","mixin","data","URL","methods","baseRequest","config","instance","create","baseURL","request","headers","authorization","localStorage","token","interceptors","response","use","error","status","$router","push","Promise","reject","checkAuth","deleteDropFile","index","dropFiles","splice","computed","state"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,MAAkB,eAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,IAAMC,KAAK,GAAG;AACZC,EAAAA,IADY,kBACL;AACL,WAAO;AACLC,MAAAA,GAAG,EAAE;AADA,KAAP;AAGD,GALW;AAMZC,EAAAA,OAAO,EAAE;AACPC,IAAAA,WADO,uBACKC,MADL,EACa;AAClB,UAAMC,QAAQ,GAAGP,KAAK,CAACQ,MAAN,CAAa;AAC5BC,QAAAA,OAAO,EAAE;AADmB,OAAb,CAAjB;AAGA,aAAOF,QAAQ,CAACG,OAAT,CAAiBJ,MAAjB,CAAP;AACD,KANM;AAQPI,IAAAA,OARO,mBAQCJ,MARD,EAQS;AAAA;;AACd,UAAMC,QAAQ,GAAGP,KAAK,CAACQ,MAAN,CAAa;AAC5BC,QAAAA,OAAO,EAAE,wBADmB;AAE5BE,QAAAA,OAAO,EAAE;AACPC,UAAAA,aAAa,EAAE,WAAWC,YAAY,CAACC,KADhC;AAEP,0BAAgB;AAFT;AAFmB,OAAb,CAAjB;AAOAP,MAAAA,QAAQ,CAACQ,YAAT,CAAsBC,QAAtB,CAA+BC,GAA/B,CACE,UAACD,QAAD,EAAc;AACZ;AACA;AAEA,eAAOA,QAAP;AACD,OANH,EAOE,UAACE,KAAD,EAAW;AACT;AACA;AACA,YAAIA,KAAK,CAACF,QAAV,EAAoB;AAClB,cACEE,KAAK,CAACF,QAAN,CAAed,IAAf,IACAgB,KAAK,CAACF,QAAN,CAAeG,MAAf,KAA0B,GAD1B,IAEAD,KAAK,CAACF,QAAN,CAAeG,MAAf,KAA0B,GAH5B,EAIE,CACA;AACA;AACD,WARiB,CASlB;AACA;;;AACA,cAAID,KAAK,CAACF,QAAN,CAAeG,MAAf,IAAyB,GAA7B,EAAkC,KAAI,CAACC,OAAL,CAAaC,IAAb,CAAkB,QAAlB;AACnC;;AACD,eAAOC,OAAO,CAACC,MAAR,CAAeL,KAAf,CAAP;AACD,OAxBH;AA0BA,aAAOX,QAAQ,CAACG,OAAT,CAAiBJ,MAAjB,CAAP;AACD,KA3CM;AA6CPkB,IAAAA,SA7CO,uBA6CK,CAAE,CA7CP;AA+CPC,IAAAA,cA/CO,0BA+CQC,KA/CR,EA+Ce;AACpB,WAAKC,SAAL,CAAeC,MAAf,CAAsBF,KAAtB,EAA6B,CAA7B;AACD;AAjDM,GANG;AAyDZG,EAAAA,QAAQ,EAAE;AACRf,IAAAA,KADQ,mBACA;AACN,aAAOf,KAAK,CAAC+B,KAAN,CAAYhB,KAAnB;AACD;AAHO;AAzDE,CAAd;AAgEA,eAAeb,KAAf","sourcesContent":["/* eslint-disable */\nimport store from \"./store/index\";\nimport axios from \"axios\";\n\nconst mixin = {\n  data() {\n    return {\n      URL: \"http://127.0.0.1:8000/\",\n    };\n  },\n  methods: {\n    baseRequest(config) {\n      const instance = axios.create({\n        baseURL: \"http://127.0.0.1:8000/\",\n      });\n      return instance.request(config);\n    },\n\n    request(config) {\n      const instance = axios.create({\n        baseURL: \"http://127.0.0.1:8000/\",\n        headers: {\n          authorization: \"Token \" + localStorage.token,\n          \"Content-Type\": \"application/json\",\n        },\n      });\n      instance.interceptors.response.use(\n        (response) => {\n          // do something with the response data\\\n          // this.loading = false\n\n          return response;\n        },\n        (error) => {\n          // this.loading = false\n          // handle the response error\n          if (error.response) {\n            if (\n              error.response.data &&\n              error.response.status !== 404 &&\n              error.response.status !== 500\n            ) {\n              // let errors = Object.values(error.response.data)\n              // errors.forEach(msg => { M.toast({ html: msg, classes: 'red' }) });\n            }\n            // if (error.response.status == 503) { M.toast({ html: 'خطا در ارتباط با سرور', classes: 'red' }) }\n            // if (error.response.status == 403) store.dispatch(\"GetUserData\");\n            if (error.response.status == 401) this.$router.push(\"/login\");\n          }\n          return Promise.reject(error);\n        }\n      );\n      return instance.request(config);\n    },\n\n    checkAuth() {},\n\n    deleteDropFile(index) {\n      this.dropFiles.splice(index, 1);\n    },\n  },\n  computed: {\n    token() {\n      return store.state.token;\n    },\n  },\n};\n\nexport default mixin;\n"]}]}